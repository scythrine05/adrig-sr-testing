generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  username        String            @unique
  password        String
  optimised       String            @default("notset")
  department      String?           @default("")
  manager         String?           @default("")
  phone           String?           @unique
  depot           String?           @default("")
  requests        Requests[]
  StagingRequests StagingRequests[]
}

model Otp {
  id        String   @id @default(uuid())
  email     String   @unique
  code      String
  createdAt DateTime @default(now())
  validTill DateTime
}

model Manager {
  email      String            @unique
  password   String
  id         String            @id @default(uuid())
  department String?
  name       String?
  Requests   Requests[]
  requests   StagingRequests[]
}

model StagingRequests {
  requestId                    String   @id
  date                         String
  selectedDepartment           String
  selectedSection              String
  stationID                    String
  missionBlock                 String
  workType                     String
  workDescription              String
  selectedLine                 Json
  selectedStream               String?
  cautionRequired              String
  cautionSpeed                 String
  cautionLocationFrom          String
  cautionLocationTo            String
  workLocationFrom             String
  workLocationTo               String
  demandTimeFrom               String
  demandTimeTo                 String
  sigDisconnection             String
  elementarySectionFrom        String
  elementarySectionTo          String
  sigElementarySectionFrom     String
  sigElementarySectionTo       String
  repercussions                String
  otherLinesAffected           Json
  requestremarks               String
  createdAt                    DateTime @default(now())
  userId                       String?
  managerId                    String?
  status                       String?
  selectedDepo                 String?
  sigResponse                  String?  @default("yes")
  ohDisconnection              String?
  oheDisconnection             String?
  oheResponse                  String?  @default("yes")
  corridorType                 String?
  sigActionsNeeded             String?  @default("yes")
  trdActionsNeeded             String?  @default("yes")
  ManagerResponse              String?
  archived                     Boolean  @default(false)
  sigDisconnectionRequirements String?
  trdDisconnectionRequirements String?
  Manager                      Manager? @relation(fields: [managerId], references: [id])
  User                         User?    @relation(fields: [userId], references: [id])
}

model Requests {
  requestId                    String   @id
  date                         String
  selectedDepartment           String
  selectedSection              String
  stationID                    String
  missionBlock                 String
  workType                     String
  workDescription              String
  cautionRequired              String
  cautionSpeed                 String
  cautionLocationFrom          String
  cautionLocationTo            String
  workLocationFrom             String
  workLocationTo               String
  demandTimeFrom               String
  demandTimeTo                 String
  sigDisconnection             String
  elementarySectionFrom        String
  elementarySectionTo          String
  userId                       String?
  sigElementarySectionFrom     String
  sigElementarySectionTo       String
  repercussions                String
  requestremarks               String
  createdAt                    DateTime @default(now())
  selectedStream               String?
  selectedLine                 Json
  otherLinesAffected           Json
  managerId                    String?
  selectedDepo                 String?
  sigResponse                  String?  @default("yes")
  ohDisconnection              String?
  oheDisconnection             String?
  oheResponse                  String?  @default("yes")
  corridorType                 String?
  sigActionsNeeded             String?  @default("yes")
  trdActionsNeeded             String?  @default("yes")
  ManagerResponse              String?
  sigDisconnectionRequirements String?
  trdDisconnectionRequirements String?
  SanctionedStatus             String   @default("UP")
  Manager                      Manager? @relation(fields: [managerId], references: [id])
  User                         User?    @relation(fields: [userId], references: [id])
}

model Sanctiontable {
  id                           String  @id @default(cuid())
  requestId                    String  @unique
  date                         String
  selectedDepartment           String
  selectedSection              String
  stationID                    String
  missionBlock                 String
  workType                     String
  workDescription              String
  selectedLine                 String
  cautionRequired              String
  cautionSpeed                 String
  cautionLocationFrom          String
  cautionLocationTo            String
  workLocationFrom             String
  workLocationTo               String
  demandTimeFrom               String
  demandTimeTo                 String
  sigDisconnection             String
  elementarySectionFrom        String
  elementarySectionTo          String
  userId                       String?
  action                       String  @default("none")
  remarks                      String?
  sigElementarySectionFrom     String
  sigElementarySectionTo       String
  repercussions                String
  requestremarks               String
  final                        String?
  Optimisedtimefrom            String?
  Optimisedtimeto              String?
  optimization_details         String?
  selectedStream               String?
  otherLinesAffected           Json?
  managerId                    String?
  selectedDepo                 String?
  status                       String  @default("in progress")
  sigResponse                  String?
  ohDisconnection              String?
  oheDisconnection             String?
  oheResponse                  String?
  corridorType                 String?
  ManagerResponse              String?
  availed                      Json?   @default("{\"reason\": \"\", \"status\": \"pending\"}")
  sigDisconnectionRequirements String?
  trdDisconnectionRequirements String?
  adSaved                      String?
}

model SuperAdmin {
  id       String @id @default(uuid())
  email    String @unique
  password String
}
